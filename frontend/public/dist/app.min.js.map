{"version":3,"sources":["app/app.ts","app/login_service.ts","demo/demo.ts","home/home.ts","home/home_no_login.ts","home/home_with_login.ts"],"names":["angular","module","config","$locationProvider","html5Mode","app","loginservice","ResponseToken","token","this","LoginService","$localStorage","$cookies","isLogged","undefined","checkIfLogged","console","log","prototype","isLoggedLocalStorage","bearerCookie","get","checkTokenSync","http","XMLHttpRequest","url","open","setRequestHeader","send","status","login","user","stringUser","JSON","stringify","obtainedToken","parse","response","put","service","demo","DemoCtrl","$scope","DemoService","getExcited","directive","templateUrl","controller","controllerAs","factory","home","HomeCtrl","isAuthenticated","$routeProvider","when","nolog","LoggingUser","username","password","HomeNoLogCtrl","$window","usernameLogin","passwordLogin","result","location","href","withlog","HomeWithLogCtrl"],"mappings":"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","file":"app.min.js","sourcesContent":["/// <reference path=\"../../../typings/index.d.ts\" />\n\nangular.module('imsFrontendApp', [\n    'app.demo',\n    'app.home',\n    'app.home.nolog',\n    'app.home.withlog',\n    'app.loginservice',\n    'ngRoute'\n]).config(($locationProvider) => {\n    $locationProvider.html5Mode(true);\n});","/// <reference path=\"../../../typings/index.d.ts\" />\n\n/**\n * Created by fabriziomicheloni on 27/12/16.\n */\n\nmodule app.loginservice {\n\n    'use strict';\n    import LoggingUser = app.home.nolog.LoggingUser;\n\n    ///////////////////////////////////////////////////////\n    //                       MODELS                      //\n    ///////////////////////////////////////////////////////\n\n    export class ResponseToken {\n        token: string;\n\n        constructor(token: string) {\n            this.token = token;\n        }\n    }\n\n    ///////////////////////////////////////////////////////\n    //                     INTERFACES                    //\n    ///////////////////////////////////////////////////////\n\n    export interface ILoginService {\n        isLogged: boolean;\n        checkIfLogged(): boolean;\n        checkTokenSync(token: string): boolean;\n        login(user: LoggingUser): boolean;\n    }\n\n    ///////////////////////////////////////////////////////\n    //                      SERVICE                      //\n    ///////////////////////////////////////////////////////\n\n    export class LoginService implements ILoginService {\n        isLogged: boolean = undefined;\n\n        constructor(public $localStorage, public $cookies) {\n            this.isLogged = this.checkIfLogged();\n            console.log(this.isLogged);\n        }\n\n        public checkIfLogged(): boolean {\n            let isLoggedLocalStorage = this.$localStorage.isLogged;\n            let bearerCookie = this.$cookies.get('Bearer');\n\n            if(bearerCookie == null || isLoggedLocalStorage == null) {\n                console.log(\"Not logged \");\n                return false;\n            }\n\n            if(isLoggedLocalStorage != true) {\n                return false;\n            }\n\n            // TODO connect with the real api gateway\n            // return this.checkTokenSync(bearerCookie);\n            return true;\n        }\n\n        public checkTokenSync(token: string): boolean {\n            if(token == null) {\n                return false;\n            }\n\n            let http = new XMLHttpRequest();\n            let url = 'http://localhost/api/authentication/validate';\n            http.open(\"POST\", url, false);\n            http.setRequestHeader('Content-Type', 'application/txt');\n\n            // TODO connect with the real api gateway\n            http.send('eyJhbGciOiJIUzUxMiJ9.' +\n                'eyJzdWIiOiJSaWNoYXJkMDEyIiwiY3JlYXRlZCI6MTQ4MTU4NDA5ODE1NywiZXhwIjoxNDg0MTc2MDk4fQ.' +\n                '0-cTOpZXwz7FewssjHpfXbWnr6JDUYX7B1ZbT3OPU6ude3MzA21obWA6VRtfysAwFSwIYXtSDINqDRM1EbTFJw');\n\n            return http.status == 200;\n        }\n\n        login(user: LoggingUser): boolean {\n            let stringUser: string = JSON.stringify(user);\n            let http = new XMLHttpRequest();\n            let url = 'http://localhost/api/authentication/auth';\n            http.open(\"POST\", url, false);\n            http.setRequestHeader('Content-Type', 'application/json');\n\n            console.log(\"Logging in...\", stringUser);\n            http.send(stringUser);\n\n            if(http.status != 200) {\n                return false;\n            }\n\n            let obtainedToken: ResponseToken = JSON.parse(http.response);\n\n            this.$cookies.put('Bearer', obtainedToken.token);\n\n            this.isLogged = true;\n\n            return true;\n        }\n}\n\n    ///////////////////////////////////////////////////////\n    //                       ANGULAR                     //\n    ///////////////////////////////////////////////////////\n\n    angular\n        .module('app.loginservice', ['ngStorage', 'ngCookies'])\n        .service(\"LoginService\", ['$localStorage', '$cookies', LoginService]);\n}\n","/// <reference path=\"../../../typings/index.d.ts\" />\n\nmodule app.demo {\n\n    'use strict';\n\n    export interface IDemoCtrl {}\n    export class DemoCtrl implements IDemoCtrl {\n        constructor(\n            public $scope: ng.IScope\n        ){}\n    }\n\n    export interface IDemoService {\n        getExcited: boolean;\n    }\n\n    export class DemoService implements IDemoService {\n        getExcited: boolean = false;\n    }\n\n    angular\n        .module('app.demo', [])\n        .directive(\"demo\", function(): ng.IDirective {\n            return {\n                templateUrl: 'app-templates/demo/demo.html',\n                controller:  DemoCtrl,\n                controllerAs: 'demoCtrlVM'\n            };\n        })\n        .controller(\"demoCtrl\", DemoCtrl)\n        .factory(\"demoService\", [() => new app.demo.DemoService()]);\n}\n","/// <reference path=\"../../../typings/index.d.ts\" />\n\n/**\n * Created by fabriziomicheloni on 27/12/16.\n */\n\nmodule app.home {\n\n    'use strict';\n    import LoginService = app.loginservice.LoginService;\n    import ILoginService = app.loginservice.ILoginService;\n\n    ///////////////////////////////////////////////////////\n    //                     INTERFACES                    //\n    ///////////////////////////////////////////////////////\n\n    export interface IHomeCtrl {\n    }\n\n    ///////////////////////////////////////////////////////\n    //                     CONTROLLER                    //\n    ///////////////////////////////////////////////////////\n\n    export class HomeCtrl implements IHomeCtrl {\n        isAuthenticated: boolean =  false;\n\n        constructor(public $scope: ng.IScope, public $cookies, public LoginService: ILoginService) {\n            this.isAuthenticated = this.LoginService.isLogged;\n        }\n    }\n\n    ///////////////////////////////////////////////////////\n    //                       ANGULAR                     //\n    ///////////////////////////////////////////////////////\n\n    angular\n        .module('app.home', ['ngRoute', 'ngCookies', 'app.loginservice'])\n        .config(($routeProvider) => {\n            $routeProvider.when('/', {\n                templateUrl: '../../views/home/home.html',\n                controller: HomeCtrl,\n                controllerAs: 'homeCtrl'\n            })\n        });\n}\n","/// <reference path=\"../../../typings/index.d.ts\" />\n\n/**\n * Created by fabriziomicheloni on 27/12/16.\n */\n\nmodule app.home.nolog {\n\n    'use strict';\n    import ILoginService = app.loginservice.ILoginService;\n\n    ///////////////////////////////////////////////////////\n    //                       MODELS                      //\n    ///////////////////////////////////////////////////////\n\n    export class LoggingUser {\n        username: string;\n        password: string;\n\n        constructor(username: string, password: string) {\n            this.username = username;\n            this.password = password;\n        }\n    }\n\n    ///////////////////////////////////////////////////////\n    //                     INTERFACES                    //\n    ///////////////////////////////////////////////////////\n\n    export interface IHomeNoLogCtrl {\n        login(): void;\n        usernameLogin: string;\n        passwordLogin: string;\n    }\n\n    ///////////////////////////////////////////////////////\n    //                    CONTROLLERS                    //\n    ///////////////////////////////////////////////////////\n\n    export class HomeNoLogCtrl implements IHomeNoLogCtrl {\n        private usernameLogin: string = \"\";\n        private passwordLogin: string = \"\";\n\n        constructor(public LoginService: ILoginService, public $window) {\n        }\n\n        public login(): void {\n            let user = new LoggingUser(this.usernameLogin, this.passwordLogin);\n            console.log(user);\n\n            let result =  this.LoginService.login(user);\n\n            if(result) {\n                this.$window.location.href = '/';\n            } else {\n            //    TODO show error message\n            }\n        }\n    }\n\n    ///////////////////////////////////////////////////////\n    //                       ANGULAR                     //\n    ///////////////////////////////////////////////////////\n\n    angular\n        .module('app.home.nolog', ['app.loginservice', 'angularSpinner'])\n        .directive('homeNoLogDirective', () => {\n            return {\n                templateUrl: '../../views/home/home_no_login.html',\n                controller: HomeNoLogCtrl,\n                controllerAs: 'homeNoLogCtrl'\n            };\n        });\n}\n","/// <reference path=\"../../../typings/index.d.ts\" />\n\n/**\n * Created by fabriziomicheloni on 29/12/16.\n */\n\nmodule app.home.withlog {\n\n    'use strict';\n    import ILoginService = app.loginservice.ILoginService;\n\n    ///////////////////////////////////////////////////////\n    //                       MODELS                      //\n    ///////////////////////////////////////////////////////\n\n    // export class LoggingUser {\n    //     username: string;\n    //     password: string;\n    //\n    //     constructor(username: string, password: string) {\n    //         this.username = username;\n    //         this.password = password;\n    //     }\n    // }\n\n    ///////////////////////////////////////////////////////\n    //                     INTERFACES                    //\n    ///////////////////////////////////////////////////////\n\n    export interface IHomeWithLogCtrl {\n\n    }\n\n    ///////////////////////////////////////////////////////\n    //                    CONTROLLERS                    //\n    ///////////////////////////////////////////////////////\n\n    export class HomeWithLogCtrl implements IHomeWithLogCtrl {\n\n        constructor(public LoginService: ILoginService) {\n        }\n\n    }\n\n    ///////////////////////////////////////////////////////\n    //                       ANGULAR                     //\n    ///////////////////////////////////////////////////////\n\n    angular\n        .module('app.home.withlog', ['app.loginservice', 'angularSpinner'])\n        .directive('homeWithLogDirective', () => {\n            return {\n                templateUrl: '../../views/home/home_with_login.html',\n                controller: HomeWithLogCtrl,\n                controllerAs: 'homeWithLogCtrl'\n            };\n        });\n}\n"]}